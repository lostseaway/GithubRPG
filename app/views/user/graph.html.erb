  <script type="text/javascript" src="https://www.google.com/jsapi"></script>
  <div class="btn-group" role="group" aria-label="...">
    <button type="button" class="btn btn-default" id = "stack">Group</button>
    <button type="button" class="btn btn-default" id = "hide">Hide All</button>
    <button type="button" class="btn btn-default" id = "show">Show All</button>
  </div>
  <div id="time_div"></div>
      

<script type="text/javascript">
google.load('visualization', '1', {packages: ['corechart', 'bar']});
google.setOnLoadCallback(drawStacked);

function drawStacked() {
    <%d = Commit.getGraphN("1")%>
      var t_data = [
      <% for i in 0..d.length-1 %>
        [
          <% for j in 0..d[i].length-1 %>
            <% if i == 0 || j == 0%>
              "<%=d[i][j]%>",
            <% else %>
              <%=d[i][j]%>,
            <% end %>
          <% end %>
        ],
      <% end%>
      ]
      var g_color = ["#3366CC","#DC3912","#FF9900","#109618","#990099","#3B3EAC","#0099C6","#DD4477","#66AA00","#B82E2E","#316395","#994499","#22AA99","#AAAA11","#6633CC","#E67300","#8B0707","#329262","#5574A6","#3B3EAC"]
      var data = google.visualization.arrayToDataTable(t_data);
      var ori_data = google.visualization.arrayToDataTable(t_data);
      var max_row = <%=d.length%>
      var max_col = <%=d[0].length%>
      var check = []
      var colour = []
      for(var i = 1 ; i < max_col ;i++){
        check[i] = true;
        colour[i-1] = g_color[i-1];
      }



      var options = {
        width:600,
        height:500,
        'chartArea': {'width': '90%', 'height': '60%'},
        hAxis: {title: "Years", slantedText:true, slantedTextAngle:90,showTextEvery: 4},
        legend: { position: 'top', maxLines: 3 },
        // bar: { groupWidth: '75%' },
        isStacked: true,
        colors: colour,
        animation:{
          duration: 500,
          easing: 'out',
        },
      };

      console.log(options);

      var chart = new google.visualization.ColumnChart(document.getElementById('time_div'));
      chart.draw(data, options);
      
      var stack_b = document.getElementById('stack');

      stack_b.onclick = function() {
        options.isStacked = !options.isStacked;
        var text = options.isStacked ? "Group" : "Stack";
        $("#stack").text(text);
        chart.draw(data, options);
      }

      var hide_b = document.getElementById('hide');

      hide_b.onclick = function() {
        for(var i = 1 ; i<max_col ; i++){
          for(var j = 0 ; j < max_row-1 ; j++){
            data.setValue(j,i,0);
          }
          check[i] = false;
          options.colors[i-1] = "#CCCCCC"
        }
        chart.draw(data, options);
      }

      var show_b = document.getElementById('show');

      show_b.onclick = function() {
        for(var i = 1 ; i<max_col ; i++){
          for(var j = 0 ; j < max_row-1 ; j++){
            data.setValue(j,i,ori_data.getValue(j,i));
          }
          check[i] = true;
          options.colors[i-1] = g_color[i-1]
        }
        chart.draw(data, options);
      }

      google.visualization.events.addListener(chart, 'select', function () {
        console.log(chart.getSelection()[0])
        var row = chart.getSelection()[0].row;
        var col = chart.getSelection()[0].column;
        // console.log("ROW : "+chart.getSelection()[0].row+" COL : "+chart.getSelection()[0].column)

        if(row == null){
          console.log(col)
          if(check[col]){
            for(var i = 0;i<max_row-1;i++){
             data.setValue(i,col,0);
            }
            options.colors[col-1] = "#CCCCCC"
          }
          else{
            for(var i = 0;i<max_row-1;i++){
             data.setValue(i,col,ori_data.getValue(i,col));
            }
            options.colors[col-1] = g_color[col-1]
          }
          check[col] = !check[col]
          chart.draw(data, options);
        }

      });
    }
</script>
